spring.datasource.url=jdbc:postgresql://ep-morning-queen-a5j8wabz.us-east-2.aws.neon.tech/BiteQuest?sslmode=require
spring.datasource.username=BiteQuest_owner
spring.datasource.password=sriQ7Cakef2v
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

server.servlet.context-path=/api

#validate do token

jwt.validity=3600000
#1 hora

#palavra passe do token (segredo) necessita de no minimo 32 caracteres

jwt.secret=RXhpc3RlIHVtYSB0ZW9yaWEgcXVlIGRpeiBxdWUsIHNlIHVtIGRpYSBhbGd16W0gZGVzY29icmlyIGV4YXRhbWVudGUgcG\
  FyYSBxdWUgc2VydmUgbyBVbml2ZXJzbyBlIHBvciBxdWUgZWxlIGVzdOEgYXF1aSwgZWxlIGRlc2FwYXJlY2Vy4SBpbnN0YW50YW5lY\
  W1lbnRlIGUgc2Vy4SBzdWJzdGl0de1kbyBwb3IgYWxnbyBhaW5kYSBtYWlzIGVzdHJhbmhvIGUgaW5leHBsaWPhdmVsLiBFeGlzdGUg\
  dW1hIHNlZ3VuZGEgdGVvcmlhIHF1ZSBkaXogcXVlIGlzc28gauEgYWNvbnRlY2V1Li4u

# Exibe mensagens de erro valores inválidos (400)
#server.error.include-message=always
#server.error.include-binding-errors=always

# habilita a impressão dos comando SQL no log
spring.jpa.show-sql=true

# formata os SQL (quebra linha, identa etc)
spring.jpa.properties.hibernate.format_sql=true

# Habilitando o H2 Console. Num navegador, permite o acesso a http://localhost:8080/h2-console
#spring.h2.console.enabled=true

# indica qual a URL de acesso ao banco. A palavra "nome_banco" ao final é o nome do banco de dados
#spring.datasource.url=jdbc:h2:mem:restaurante

# para banco de dados em disco, exemplos seriam comoos abaixo. "meubanco" seria o banco de dados criado. Siram criados 1 ou 2 arquivos com o nome "meubanco"
#spring.datasource.url=jdbc:h2:file:c://usuarios//Aluno//Downloads//projetos//projetoXYZ//meubanco

# Habilita data.sql
spring.jpa.defer-datasource-initialization=true

spring.jpa.hibernate.ddl-auto=update
